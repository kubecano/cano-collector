// Code generated by MockGen. DO NOT EDIT.
// Source: factory.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockDestinationFactoryInterface is a mock of DestinationFactoryInterface interface.
type MockDestinationFactoryInterface struct {
	ctrl     *gomock.Controller
	recorder *MockDestinationFactoryInterfaceMockRecorder
}

// MockDestinationFactoryInterfaceMockRecorder is the mock recorder for MockDestinationFactoryInterface.
type MockDestinationFactoryInterfaceMockRecorder struct {
	mock *MockDestinationFactoryInterface
}

// NewMockDestinationFactoryInterface creates a new mock instance.
func NewMockDestinationFactoryInterface(ctrl *gomock.Controller) *MockDestinationFactoryInterface {
	mock := &MockDestinationFactoryInterface{ctrl: ctrl}
	mock.recorder = &MockDestinationFactoryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDestinationFactoryInterface) EXPECT() *MockDestinationFactoryInterfaceMockRecorder {
	return m.recorder
}

// CreateDestination mocks base method.
func (m *MockDestinationFactoryInterface) CreateDestination(config interface{}) (interface{}, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateDestination", config)
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateDestination indicates an expected call of CreateDestination.
func (mr *MockDestinationFactoryInterfaceMockRecorder) CreateDestination(config interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateDestination", reflect.TypeOf((*MockDestinationFactoryInterface)(nil).CreateDestination), config)
}
