// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kubecano/cano-collector/pkg/router/interfaces (interfaces: RouterInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
)

// MockRouterInterface is a mock of RouterInterface interface.
type MockRouterInterface struct {
	ctrl     *gomock.Controller
	recorder *MockRouterInterfaceMockRecorder
}

// MockRouterInterfaceMockRecorder is the mock recorder for MockRouterInterface.
type MockRouterInterfaceMockRecorder struct {
	mock *MockRouterInterface
}

// NewMockRouterInterface creates a new mock instance.
func NewMockRouterInterface(ctrl *gomock.Controller) *MockRouterInterface {
	mock := &MockRouterInterface{ctrl: ctrl}
	mock.recorder = &MockRouterInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRouterInterface) EXPECT() *MockRouterInterfaceMockRecorder {
	return m.recorder
}

// SetupRouter mocks base method.
func (m *MockRouterInterface) SetupRouter() *gin.Engine {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetupRouter")
	ret0, _ := ret[0].(*gin.Engine)
	return ret0
}

// SetupRouter indicates an expected call of SetupRouter.
func (mr *MockRouterInterfaceMockRecorder) SetupRouter() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetupRouter", reflect.TypeOf((*MockRouterInterface)(nil).SetupRouter))
}

// StartServer mocks base method.
func (m *MockRouterInterface) StartServer(arg0 *gin.Engine) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "StartServer", arg0)
}

// StartServer indicates an expected call of StartServer.
func (mr *MockRouterInterfaceMockRecorder) StartServer(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StartServer", reflect.TypeOf((*MockRouterInterface)(nil).StartServer), arg0)
}
