// Code generated by MockGen. DO NOT EDIT.
// Source: converter.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	event "github.com/kubecano/cano-collector/pkg/core/event"
	issue "github.com/kubecano/cano-collector/pkg/core/issue"
)

// MockConverterInterface is a mock of ConverterInterface interface.
type MockConverterInterface struct {
	ctrl     *gomock.Controller
	recorder *MockConverterInterfaceMockRecorder
}

// MockConverterInterfaceMockRecorder is the mock recorder for MockConverterInterface.
type MockConverterInterfaceMockRecorder struct {
	mock *MockConverterInterface
}

// NewMockConverterInterface creates a new mock instance.
func NewMockConverterInterface(ctrl *gomock.Controller) *MockConverterInterface {
	mock := &MockConverterInterface{ctrl: ctrl}
	mock.recorder = &MockConverterInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConverterInterface) EXPECT() *MockConverterInterfaceMockRecorder {
	return m.recorder
}

// ConvertAlertManagerEventToIssues mocks base method.
func (m *MockConverterInterface) ConvertAlertManagerEventToIssues(event *event.AlertManagerEvent) ([]*issue.Issue, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ConvertAlertManagerEventToIssues", event)
	ret0, _ := ret[0].([]*issue.Issue)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ConvertAlertManagerEventToIssues indicates an expected call of ConvertAlertManagerEventToIssues.
func (mr *MockConverterInterfaceMockRecorder) ConvertAlertManagerEventToIssues(event interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ConvertAlertManagerEventToIssues", reflect.TypeOf((*MockConverterInterface)(nil).ConvertAlertManagerEventToIssues), event)
}
