// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kubecano/cano-collector/config/destinations (interfaces: DestinationsLoader)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	destinations "github.com/kubecano/cano-collector/config/destination"
)

// MockDestinationsLoader is a mock of DestinationsLoader interface.
type MockDestinationsLoader struct {
	ctrl     *gomock.Controller
	recorder *MockDestinationsLoaderMockRecorder
}

// MockDestinationsLoaderMockRecorder is the mock recorder for MockDestinationsLoader.
type MockDestinationsLoaderMockRecorder struct {
	mock *MockDestinationsLoader
}

// NewMockDestinationsLoader creates a new mock instance.
func NewMockDestinationsLoader(ctrl *gomock.Controller) *MockDestinationsLoader {
	mock := &MockDestinationsLoader{ctrl: ctrl}
	mock.recorder = &MockDestinationsLoaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDestinationsLoader) EXPECT() *MockDestinationsLoaderMockRecorder {
	return m.recorder
}

// Load mocks base method.
func (m *MockDestinationsLoader) Load() (*destinations.DestinationsConfig, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Load")
	ret0, _ := ret[0].(*destinations.DestinationsConfig)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Load indicates an expected call of Load.
func (mr *MockDestinationsLoaderMockRecorder) Load() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Load", reflect.TypeOf((*MockDestinationsLoader)(nil).Load))
}
