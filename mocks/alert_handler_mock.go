// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kubecano/cano-collector/pkg/alert/interfaces (interfaces: AlertHandlerInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
)

// MockAlertHandlerInterface is a mock of AlertHandlerInterface interface.
type MockAlertHandlerInterface struct {
	ctrl     *gomock.Controller
	recorder *MockAlertHandlerInterfaceMockRecorder
}

// MockAlertHandlerInterfaceMockRecorder is the mock recorder for MockAlertHandlerInterface.
type MockAlertHandlerInterfaceMockRecorder struct {
	mock *MockAlertHandlerInterface
}

// NewMockAlertHandlerInterface creates a new mock instance.
func NewMockAlertHandlerInterface(ctrl *gomock.Controller) *MockAlertHandlerInterface {
	mock := &MockAlertHandlerInterface{ctrl: ctrl}
	mock.recorder = &MockAlertHandlerInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAlertHandlerInterface) EXPECT() *MockAlertHandlerInterfaceMockRecorder {
	return m.recorder
}

// HandleAlert mocks base method.
func (m *MockAlertHandlerInterface) HandleAlert(arg0 *gin.Context) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "HandleAlert", arg0)
}

// HandleAlert indicates an expected call of HandleAlert.
func (mr *MockAlertHandlerInterfaceMockRecorder) HandleAlert(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleAlert", reflect.TypeOf((*MockAlertHandlerInterface)(nil).HandleAlert), arg0)
}
