// Code generated by MockGen. DO NOT EDIT.
// Source: tracer.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
)

// MockTracerInterface is a mock of TracerInterface interface.
type MockTracerInterface struct {
	ctrl     *gomock.Controller
	recorder *MockTracerInterfaceMockRecorder
}

// MockTracerInterfaceMockRecorder is the mock recorder for MockTracerInterface.
type MockTracerInterfaceMockRecorder struct {
	mock *MockTracerInterface
}

// NewMockTracerInterface creates a new mock instance.
func NewMockTracerInterface(ctrl *gomock.Controller) *MockTracerInterface {
	mock := &MockTracerInterface{ctrl: ctrl}
	mock.recorder = &MockTracerInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTracerInterface) EXPECT() *MockTracerInterfaceMockRecorder {
	return m.recorder
}

// InitTracer mocks base method.
func (m *MockTracerInterface) InitTracer(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InitTracer", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// InitTracer indicates an expected call of InitTracer.
func (mr *MockTracerInterfaceMockRecorder) InitTracer(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InitTracer", reflect.TypeOf((*MockTracerInterface)(nil).InitTracer), ctx)
}

// ShutdownTracer mocks base method.
func (m *MockTracerInterface) ShutdownTracer(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ShutdownTracer", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// ShutdownTracer indicates an expected call of ShutdownTracer.
func (mr *MockTracerInterfaceMockRecorder) ShutdownTracer(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ShutdownTracer", reflect.TypeOf((*MockTracerInterface)(nil).ShutdownTracer), ctx)
}

// TraceLoggerMiddleware mocks base method.
func (m *MockTracerInterface) TraceLoggerMiddleware() gin.HandlerFunc {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TraceLoggerMiddleware")
	ret0, _ := ret[0].(gin.HandlerFunc)
	return ret0
}

// TraceLoggerMiddleware indicates an expected call of TraceLoggerMiddleware.
func (mr *MockTracerInterfaceMockRecorder) TraceLoggerMiddleware() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TraceLoggerMiddleware", reflect.TypeOf((*MockTracerInterface)(nil).TraceLoggerMiddleware))
}
