// Code generated by MockGen. DO NOT EDIT.
// Source: team_resolver.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	config_team "github.com/kubecano/cano-collector/config/team"
	event "github.com/kubecano/cano-collector/pkg/core/event"
	interfaces "github.com/kubecano/cano-collector/pkg/destination/interfaces"
)

// MockTeamResolverInterface is a mock of TeamResolverInterface interface.
type MockTeamResolverInterface struct {
	ctrl     *gomock.Controller
	recorder *MockTeamResolverInterfaceMockRecorder
}

// MockTeamResolverInterfaceMockRecorder is the mock recorder for MockTeamResolverInterface.
type MockTeamResolverInterfaceMockRecorder struct {
	mock *MockTeamResolverInterface
}

// NewMockTeamResolverInterface creates a new mock instance.
func NewMockTeamResolverInterface(ctrl *gomock.Controller) *MockTeamResolverInterface {
	mock := &MockTeamResolverInterface{ctrl: ctrl}
	mock.recorder = &MockTeamResolverInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTeamResolverInterface) EXPECT() *MockTeamResolverInterfaceMockRecorder {
	return m.recorder
}

// ResolveTeam mocks base method.
func (m *MockTeamResolverInterface) ResolveTeam(alert *event.AlertManagerEvent) (*config_team.Team, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ResolveTeam", alert)
	ret0, _ := ret[0].(*config_team.Team)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ResolveTeam indicates an expected call of ResolveTeam.
func (mr *MockTeamResolverInterfaceMockRecorder) ResolveTeam(alert interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ResolveTeam", reflect.TypeOf((*MockTeamResolverInterface)(nil).ResolveTeam), alert)
}

// ValidateTeamDestinations mocks base method.
func (m *MockTeamResolverInterface) ValidateTeamDestinations(registry interfaces.DestinationRegistryInterface) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateTeamDestinations", registry)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateTeamDestinations indicates an expected call of ValidateTeamDestinations.
func (mr *MockTeamResolverInterfaceMockRecorder) ValidateTeamDestinations(registry interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateTeamDestinations", reflect.TypeOf((*MockTeamResolverInterface)(nil).ValidateTeamDestinations), registry)
}
