// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kubecano/cano-collector/pkg/alert (interfaces: AlertFormatterInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	template "github.com/prometheus/alertmanager/template"
)

// MockAlertFormatterInterface is a mock of AlertFormatterInterface interface.
type MockAlertFormatterInterface struct {
	ctrl     *gomock.Controller
	recorder *MockAlertFormatterInterfaceMockRecorder
}

// MockAlertFormatterInterfaceMockRecorder is the mock recorder for MockAlertFormatterInterface.
type MockAlertFormatterInterfaceMockRecorder struct {
	mock *MockAlertFormatterInterface
}

// NewMockAlertFormatterInterface creates a new mock instance.
func NewMockAlertFormatterInterface(ctrl *gomock.Controller) *MockAlertFormatterInterface {
	mock := &MockAlertFormatterInterface{ctrl: ctrl}
	mock.recorder = &MockAlertFormatterInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAlertFormatterInterface) EXPECT() *MockAlertFormatterInterfaceMockRecorder {
	return m.recorder
}

// FormatAlert mocks base method.
func (m *MockAlertFormatterInterface) FormatAlert(arg0 template.Data) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FormatAlert", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// FormatAlert indicates an expected call of FormatAlert.
func (mr *MockAlertFormatterInterfaceMockRecorder) FormatAlert(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FormatAlert", reflect.TypeOf((*MockAlertFormatterInterface)(nil).FormatAlert), arg0)
}
