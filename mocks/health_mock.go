// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kubecano/cano-collector/pkg/health (interfaces: HealthInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockHealthInterface is a mock of HealthInterface interface.
type MockHealthInterface struct {
	ctrl     *gomock.Controller
	recorder *MockHealthInterfaceMockRecorder
}

// MockHealthInterfaceMockRecorder is the mock recorder for MockHealthInterface.
type MockHealthInterfaceMockRecorder struct {
	mock *MockHealthInterface
}

// NewMockHealthInterface creates a new mock instance.
func NewMockHealthInterface(ctrl *gomock.Controller) *MockHealthInterface {
	mock := &MockHealthInterface{ctrl: ctrl}
	mock.recorder = &MockHealthInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHealthInterface) EXPECT() *MockHealthInterfaceMockRecorder {
	return m.recorder
}

// Handler mocks base method.
func (m *MockHealthInterface) Handler() http.Handler {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Handler")
	ret0, _ := ret[0].(http.Handler)
	return ret0
}

// Handler indicates an expected call of Handler.
func (mr *MockHealthInterfaceMockRecorder) Handler() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Handler", reflect.TypeOf((*MockHealthInterface)(nil).Handler))
}

// RegisterHealthChecks mocks base method.
func (m *MockHealthInterface) RegisterHealthChecks() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RegisterHealthChecks")
	ret0, _ := ret[0].(error)
	return ret0
}

// RegisterHealthChecks indicates an expected call of RegisterHealthChecks.
func (mr *MockHealthInterfaceMockRecorder) RegisterHealthChecks() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RegisterHealthChecks", reflect.TypeOf((*MockHealthInterface)(nil).RegisterHealthChecks))
}
