// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kubecano/cano-collector/pkg/metric (interfaces: MetricsInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
)

// MockMetricsInterface is a mock of MetricsInterface interface.
type MockMetricsInterface struct {
	ctrl     *gomock.Controller
	recorder *MockMetricsInterfaceMockRecorder
}

// MockMetricsInterfaceMockRecorder is the mock recorder for MockMetricsInterface.
type MockMetricsInterfaceMockRecorder struct {
	mock *MockMetricsInterface
}

// NewMockMetricsInterface creates a new mock instance.
func NewMockMetricsInterface(ctrl *gomock.Controller) *MockMetricsInterface {
	mock := &MockMetricsInterface{ctrl: ctrl}
	mock.recorder = &MockMetricsInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetricsInterface) EXPECT() *MockMetricsInterfaceMockRecorder {
	return m.recorder
}

// ClearMetrics mocks base method.
func (m *MockMetricsInterface) ClearMetrics() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ClearMetrics")
}

// ClearMetrics indicates an expected call of ClearMetrics.
func (mr *MockMetricsInterfaceMockRecorder) ClearMetrics() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ClearMetrics", reflect.TypeOf((*MockMetricsInterface)(nil).ClearMetrics))
}

// ObserveAlert mocks base method.
func (m *MockMetricsInterface) ObserveAlert(arg0, arg1 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ObserveAlert", arg0, arg1)
}

// ObserveAlert indicates an expected call of ObserveAlert.
func (mr *MockMetricsInterfaceMockRecorder) ObserveAlert(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ObserveAlert", reflect.TypeOf((*MockMetricsInterface)(nil).ObserveAlert), arg0, arg1)
}

// PrometheusMiddleware mocks base method.
func (m *MockMetricsInterface) PrometheusMiddleware() gin.HandlerFunc {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PrometheusMiddleware")
	ret0, _ := ret[0].(gin.HandlerFunc)
	return ret0
}

// PrometheusMiddleware indicates an expected call of PrometheusMiddleware.
func (mr *MockMetricsInterfaceMockRecorder) PrometheusMiddleware() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PrometheusMiddleware", reflect.TypeOf((*MockMetricsInterface)(nil).PrometheusMiddleware))
}
