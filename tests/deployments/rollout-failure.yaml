apiVersion: apps/v1
kind: Deployment
metadata:
  name: rollout-failure-test
  labels:
    app: test-deployment
    test-type: deployment
    scenario: rollout-failure
spec:
  replicas: 2
  selector:
    matchLabels:
      app: rollout-failure-app
  template:
    metadata:
      labels:
        app: rollout-failure-app
        test-type: deployment
        scenario: rollout-failure
    spec:
      containers:
      - name: failing-rollout
        image: busybox:latest
        command: ["sleep", "1"]  # Will crash immediately
        resources:
          limits:
            memory: "64Mi"
            cpu: "100m"
          requests:
            memory: "32Mi"
            cpu: "50m"
      restartPolicy: Always
  # Problematic rolling update strategy
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1  # Allow 1 pod to be unavailable
      maxSurge: 1        # Allow 1 extra pod during rollout
  # Set progress deadline to make failure happen faster  
  progressDeadlineSeconds: 30
# This creates a rollout failure scenario:
# - Pods crash immediately due to sleep 1 command (exit after 1 second)
# - Short progressDeadlineSeconds (30s) causes faster failure detection
# - Rolling update will fail due to pods not becoming ready
# - Deployment will fail with ProgressDeadlineExceeded condition
# - CrashLoopBackOff prevents successful rollout