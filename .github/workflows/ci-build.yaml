name: integration-tests
on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'

env:
  # Golang version to use across CI steps
  # renovate: datasource=golang-version packageName=golang
  GOLANG_VERSION: '1.23.4'
  GROUP_NAME: 'kubecano'
  PROJ_NAME: 'cano-collector'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: read
  checks: write

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.filter.outputs.backend_any_changed }}
      docs: ${{ steps.filter.outputs.docs_any_changed }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: tj-actions/changed-files@dcc7a0cba800f454d79fff4b993e8c3555bcc0a8 # v45.0.7
        id: filter
        with:
          # Any file which is not under docs/, ui/ or is not a markdown file is counted as a backend file
          files_yaml: |
            backend:
              - '!**.md'            
              - '!**/*.md'
              - '!docs/**'
            docs:
              - 'docs/**'

  check-go:
    name: Ensure Go modules synchronicity
    if: ${{ needs.changes.outputs.backend == 'true' }}
    runs-on: ubuntu-24.04
    needs:
      - changes
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Setup Golang
        uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
        with:
          go-version: ${{ env.GOLANG_VERSION }}
      - name: Download all Go modules
        run: |
          go mod download
      - name: Check for tidiness of go.mod and go.sum
        run: |
          go mod tidy
          git diff --exit-code -- .
      - name: Check go vet
        run: |
          go vet -json ./... 2> go-vet.out
      - name: Upload go-vet report
        uses: actions/upload-artifact@v4.6.1
        with:
          name: go-vet-report
          path: go-vet.out
  
  build-go:
    name: Build & cache Go code
    if: ${{ needs.changes.outputs.backend == 'true' }}
    runs-on: ubuntu-24.04
    needs:
      - changes
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Setup Golang
        uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
        with:
          go-version: ${{ env.GOLANG_VERSION }}
      - name: Restore go build cache
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: ~/.cache/go-build
          key: ${{ runner.os }}-go-build-v1-${{ github.run_id }}
      - name: Download all Go modules
        run: |
          go mod download
      - name: Compile all packages
        run: make build

  lint-go:
    name: Lint Go code
    if: ${{ needs.changes.outputs.backend == 'true' }}
    runs-on: ubuntu-24.04
    needs:
      - changes
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Setup Golang
        uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
        with:
          go-version: ${{ env.GOLANG_VERSION }}
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@051d91933864810ecd5e2ea2cfd98f6a5bca5347 # v6.3.2
        with:
          # renovate: datasource=go packageName=github.com/golangci/golangci-lint versioning=regex:^v(?<major>\d+)\.(?<minor>\d+)\.(?<patch>\d+)?$
          version: v1.62.2
          args: --verbose --out-format=checkstyle:golangci-lint-report.xml
      - name: Upload golangci-lint report
        uses: actions/upload-artifact@v4.6.1
        with:
          name: golangci-lint-report
          path: golangci-lint-report.xml

  hadolint-docker:
    name: Lint Dockerfiles
    if: ${{ needs.changes.outputs.backend == 'true' }}
    runs-on: ubuntu-24.04
    needs:
      - changes
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile
          output-file: hadolint-report.out
          format: json
      - name: Upload hadolint report
        uses: actions/upload-artifact@v4.6.1
        with:
          name: hadolint-report
          path: hadolint-report.out

  test-go:
    name: Run unit tests for Go packages
    if: ${{ needs.changes.outputs.backend == 'true' }}
    runs-on: ubuntu-24.04
    needs:
      - build-go
      - changes
    steps:
      - name: Create checkout directory
        run: mkdir -p ~/go/src/github.com/${{ env.GROUP_NAME }}
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Create symlink in GOPATH
        run: ln -s $(pwd) ~/go/src/github.com/${{ env.GROUP_NAME }}/${{ env.PROJ_NAME }}
      - name: Setup Golang
        uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5.3.0
        with:
          go-version: ${{ env.GOLANG_VERSION }}
      - name: Restore go build cache
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: ~/.cache/go-build
          key: ${{ runner.os }}-go-build-v1-${{ github.run_id }}
      - name: Download and vendor all required packages
        run: |
          go mod download
      - name: Setup gotestsum
        uses: autero1/action-gotestsum@v2.0.0
        with:
          gotestsum_version: 1.12.0
      - name: Run all unit tests
        run: gotestsum --jsonfile test-report.out -- -coverprofile=coverage.out ./...
      - name: Upload test report
        uses: actions/upload-artifact@v4.6.1
        with:
          name: test-report
          path: |
            test-report.out
            coverage.out

  sonarqube:
    runs-on: ubuntu-latest
    needs:
      - check-go
      - lint-go
      - hadolint-docker
      - test-go
    steps:
      - uses: actions/checkout@v4
        with:
          # Disabling shallow clones is recommended for improving the relevancy of reporting
          fetch-depth: 0
      - name: Download SAST reports
        uses: actions/download-artifact@v4.1.9
        with:
          path: ./sast-reports
          merge-multiple: true
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.go.tests.reportPaths=./sast-reports/test-report.out
            -Dsonar.go.coverage.reportPaths=./sast-reports/coverage.out
            -Dsonar.go.govet.reportPaths=./sast-reports/go-vet.out
            -Dsonar.go.golangci-lint.reportPaths=./sast-reports/golangci-lint-report.xml
            -Dsonar.docker.hadolint.reportPaths=./sast-reports/hadolint-report.out
