name: integration-tests
on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'

env:
  # Golang version to use across CI steps
  # renovate: datasource=golang-version packageName=golang
  GOLANG_VERSION: '1.24.0'
  # GolangCI-Lint version to use across CI steps
  # renovate: datasource=go packageName=github.com/golangci/golangci-lint versioning=regex:^v(?<major>\d+)\.(?<minor>\d+)\.(?<patch>\d+)?$
  GOLANGCI_LINT_VERSION: 'v2.1.6'
  GROUP_NAME: 'kubecano'
  PROJ_NAME: 'cano-collector'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: read
  checks: write

jobs:
  check-go:
    name: Ensure Go modules synchronicity
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      - name: Setup Golang
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: ${{ env.GOLANG_VERSION }}
      - name: Download all Go modules
        run: |
          go mod download
      - name: Check for tidiness of go.mod and go.sum
        run: |
          go mod tidy
          git diff --exit-code -- .
      - name: Check go vet
        run: |
          go vet -json ./... 2> go-vet.out
      - name: Upload go-vet report
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: go-vet-report
          path: go-vet.out

  build-go:
    name: Build & cache Go code
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      - name: Setup Golang
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: ${{ env.GOLANG_VERSION }}
      - name: Restore go build cache
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: ~/.cache/go-build
          key: ${{ runner.os }}-go-build-v1-${{ github.run_id }}
      - name: Download all Go modules
        run: |
          go mod download
      - name: Compile all packages
        run: make build

  lint-go:
    name: Lint Go code
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      - name: Setup Golang
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: ${{ env.GOLANG_VERSION }}
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9 # v8.0.0
        with:
          version: ${{ env.GOLANGCI_LINT_VERSION }}
          args: --verbose --output.checkstyle.path=golangci-lint-report.xml
      - name: Upload golangci-lint report
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: golangci-lint-report
          path: golangci-lint-report.xml

  hadolint-docker:
    name: Lint Dockerfiles
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      - uses: hadolint/hadolint-action@54c9adbab1582c2ef04b2016b760714a4bfde3cf # v3.1.0
        with:
          dockerfile: Dockerfile
          output-file: hadolint-report.out
          format: json
      - name: Upload hadolint report
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: hadolint-report
          path: hadolint-report.out

  test-go:
    name: Run unit tests for Go packages
    runs-on: ubuntu-24.04
    needs:
      - build-go
    steps:
      - name: Create checkout directory
        run: mkdir -p ~/go/src/github.com/${{ env.GROUP_NAME }}
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
      - name: Create symlink in GOPATH
        run: ln -s $(pwd) ~/go/src/github.com/${{ env.GROUP_NAME }}/${{ env.PROJ_NAME }}
      - name: Setup Golang
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: ${{ env.GOLANG_VERSION }}
      - name: Restore go build cache
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: ~/.cache/go-build
          key: ${{ runner.os }}-go-build-v1-${{ github.run_id }}
      - name: Download and vendor all required packages
        run: |
          go mod download
      - name: Setup gotestsum
        uses: autero1/action-gotestsum@7263b9d73912eec65f46337689e59fac865c425f # v2.0.0
        with:
          gotestsum_version: 1.12.0
      - name: Run all unit tests
        run: gotestsum --jsonfile test-report.out -- -coverprofile=coverage.out ./...
      - name: Upload test report
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: test-report
          path: |
            test-report.out
            coverage.out

  sonarqube:
    runs-on: ubuntu-latest
    needs:
      - check-go
      - lint-go
      - hadolint-docker
      - test-go
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
        with:
          # Disabling shallow clones is recommended for improving the relevancy of reporting
          fetch-depth: 0
      - name: Download SAST reports
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          path: ./sast-reports
          merge-multiple: true
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@8c71dc039c2dd71d3821e89a2b58ecc7fee6ced9 # v5.3.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.go.tests.reportPaths=./sast-reports/test-report.out
            -Dsonar.go.coverage.reportPaths=./sast-reports/coverage.out
            -Dsonar.go.govet.reportPaths=./sast-reports/go-vet.out
            -Dsonar.go.golangci-lint.reportPaths=./sast-reports/golangci-lint-report.xml
            -Dsonar.docker.hadolint.reportPaths=./sast-reports/hadolint-report.out
